// Button Base Styles
.tristan-button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: 1px solid transparent;
  cursor: pointer;
  font-family: inherit;
  text-decoration: none;
  outline: none;
  overflow: hidden;
  
  // // Focus state
  // &:focus-visible, &:focus {
  //   outline: 2px solid var(--color--border-prime) !important;
  //   outline-offset: 2px;
  // }

  &--small {
    padding: 6px 12px;
  }

  &--medium {
    padding: 0 7px;
    height: 32px;
    border-radius: 4px;
    gap: 1px;

    .tristan-button__icon {
      font-size: 18px;
      padding: 2px 0;
    }

    .tristan-button__content {
      font-size: 14px;
      line-height: 22px;
      padding: 0 3px;
    }
  }

  &--large {
    padding: 12px 20px;
    font-size: 18px;
    min-height: 48px;
  }

  &--outlined {
    background-color: transparent;

    &.tristan-button--default {
      border-color: var(--color--border-prime);
      color: var(--color--text-secondary);

      &:hover:not(.tristan-button--disabled) {
        border-color: var(--color--border-darken);

        .hover-box {
          opacity: 1;
        }
      }
    }

    &.tristan-button--success {
      border-color: var(--color--semantic-success-pale);
      background-color: var(--color--semantic-success-pale);
      color: var(--color--semantic-success);

      &:hover:not(.tristan-button--disabled) {
        border-color: var(--color--semantic-success-half);

        .hover-box {
          opacity: 1;
        }
      }
    }

    &.tristan-button--active {
      border-color: var(--color--semantic-active-pale);
      background-color: var(--color--semantic-active-pale);
      color: var(--color--semantic-active);

      &:hover:not(.tristan-button--disabled) {
        border-color: var(--color--semantic-active-half);

        .hover-box {
          opacity: 1;
        }
      }
    }

    &.tristan-button--warning {
      border-color: var(--color--semantic-warning-pale);
      background-color: var(--color--semantic-warning-pale);
      color: var(--color--semantic-warning);

      &:hover:not(.tristan-button--disabled) {
        border-color: var(--color--semantic-warning-half);

        .hover-box {
          opacity: 1;
        }
      }
    }

    &.tristan-button--error {
      border-color: var(--color--semantic-error-pale);
      background-color: var(--color--semantic-error-pale);
      color: var(--color--semantic-error);
      
      &:hover:not(.tristan-button--disabled) {
        border-color: var(--color--semantic-error-half);

        .hover-box {
          opacity: 1;
        }
      }
    }
  }

  &--filled {
    
    &.tristan-button--default {
      background-color: var(--color--bg-secondary);
      color: var(--color--text-secondary);
      
      &:hover:not(.tristan-button--disabled) {
        .hover-box {
          opacity: 1;
        }
      }
    }

    &.tristan-button--success {
      background-color: var(--color--semantic-success);
      color: var(--color-chart--base-white);
      
      &:hover:not(.tristan-button--disabled) {
        .hover-box {
          opacity: 1;
        }
      }
    }

    &.tristan-button--active {
      background-color: var(--color--semantic-active);
      color: var(--color-chart--base-white);
      
      &:hover:not(.tristan-button--disabled) {
        .hover-box {
          opacity: 1;
        }
      }
    }

    &.tristan-button--warning {
      background-color: var(--color--semantic-warning);
      color: var(--color-chart--base-white);
      
      &:hover:not(.tristan-button--disabled) {
        .hover-box {
          opacity: 1;
        }
      }
    }

    &.tristan-button--error {
      background-color: var(--color--semantic-error);
      color: var(--color-chart--base-white);
      
      &:hover:not(.tristan-button--disabled) {
        .hover-box {
          opacity: 1;
        }
      }
    }
  }


  &--ghost {
    background-color: transparent;

    &.tristan-button--default {
      color: var(--color--text-secondary);
      
      &:hover:not(.tristan-button--disabled) {
        .hover-box {
          opacity: 1;
        }
      }
    }

    &.tristan-button--success {
      color: var(--color--semantic-success);
      
      &:hover:not(.tristan-button--disabled) {
        background-color: var(--color--semantic-success-pale);
      }
    }

    &.tristan-button--active {
      color: var(--color--semantic-active);
      
      &:hover:not(.tristan-button--disabled) {
        background-color: var(--color--semantic-active-pale);
      }
    }

    &.tristan-button--warning {
      color: var(--color--semantic-warning);
      
      &:hover:not(.tristan-button--disabled) {
        background-color: var(--color--semantic-warning-pale);
      }
    }

    &.tristan-button--error {
      color: var(--color--semantic-error);
      
      &:hover:not(.tristan-button--disabled) {
        background-color: var(--color--semantic-error-pale);
      }
    }
  }

  // States
  &--disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }

  &--loading {
    cursor: not-allowed;
  }

  &__spinner {
    animation: spin 1s linear infinite;
  }

  &__icon {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
  }

  &__content {
    display: flex;
    align-items: center;
    gap: inherit;
  }

  &__deco-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

